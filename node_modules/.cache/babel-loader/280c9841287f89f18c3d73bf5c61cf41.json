{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Labs Dev Multi\\\\Nouveau dossier\\\\react-movie-app\\\\src\\\\components\\\\MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst MovieList = props => {\n  _s();\n\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [userCountry, setUserCountry] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  const handleClick = async movie => {\n    try {\n      const detailsResponse = await fetchMovieDetails(movie.id);\n      setSelectedMovie({ ...movie,\n        description: detailsResponse.overview\n      });\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n    }\n  };\n\n  const fetchMovieDetails = async movieId => {\n    try {\n      const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=00e58447b107bbf5456c351874f74894`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n      return null;\n    }\n  };\n\n  const addToFavorites = movie => {\n    const isAlreadyAdded = props.movies.some(fav => fav.id === movie.id);\n\n    if (!isAlreadyAdded) {\n      props.AddFavourites(movie);\n    }\n  };\n\n  const getUserCountry = async () => {\n    try {\n      console.log('Getting user country...');\n\n      if (navigator.geolocation) {\n        console.log('Geolocation supported. Fetching current position...');\n        navigator.geolocation.getCurrentPosition(async position => {\n          console.log('Current position fetched:', position.coords);\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          console.log('Latitude:', latitude, 'Longitude:', longitude);\n          console.log('Fetching country from location...');\n          const country = await getCountryFromLocation(latitude, longitude);\n          console.log('User country:', country);\n          setUserCountry(country);\n        });\n      } else {\n        setErrorMsg('Geolocation is not supported by this browser.');\n      }\n    } catch (error) {\n      console.error('Error getting user country:', error);\n      setErrorMsg('Error getting user country: ' + error.message);\n    }\n  };\n\n  const getCountryFromLocation = async (latitude, longitude) => {\n    try {\n      console.log('Fetching country from location:', latitude, longitude);\n      const response = await axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${latitude},${longitude}&key=2de1c3f556354322b312077954676795`);\n      console.log('Location data response:', response.data);\n      const country = response.data.results[0].components.country;\n      console.log('Country:', country);\n      return country;\n    } catch (error) {\n      console.error('Error getting country from location:', error);\n      throw new Error('Error getting country from location: ' + error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getUserCountry,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"16\",\n        height: \"16\",\n        fill: \"currentColor\",\n        class: \"bi bi-film\",\n        viewBox: \"0 0 16 16\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M0 1a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1zm4 0v6h8V1zm8 8H4v6h8zM1 1v2h2V1zm2 3H1v2h2zM1 7v2h2V7zm2 3H1v2h2zm-2 3v2h2v-2zM15 1h-2v2h2zm-2 3v2h2V4zm2 3h-2v2h2zm-2 3v2h2v-2zm2 3h-2v2h2z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 20\n    }, this), props.movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container d-flex justify-content-start m-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n        alt: \"movie\",\n        onClick: () => handleClick(movie)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => addToFavorites(movie),\n        className: \"overlay d-flex align-items-center justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add to Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)), selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container d-flex justify-content-start m-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-movie-details\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500/${selectedMovie.poster_path}`,\n            alt: \"selected movie poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: selectedMovie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: selectedMovie.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MovieList, \"sXTSacTQz6boo1iMMapfa6TNEbc=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Labs Dev Multi/Nouveau dossier/react-movie-app/src/components/MovieList.js"],"names":["React","useState","axios","MovieList","props","selectedMovie","setSelectedMovie","userCountry","setUserCountry","errorMsg","setErrorMsg","handleClick","movie","detailsResponse","fetchMovieDetails","id","description","overview","error","console","movieId","response","get","data","addToFavorites","isAlreadyAdded","movies","some","fav","AddFavourites","getUserCountry","log","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","country","getCountryFromLocation","message","results","components","Error","map","index","poster_path","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MovieList = (props) => {\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [userCountry, setUserCountry] = useState(null);\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n\r\n  const handleClick = async (movie) => {\r\n    try {\r\n      const detailsResponse = await fetchMovieDetails(movie.id);\r\n      setSelectedMovie({ ...movie, description: detailsResponse.overview });\r\n    } catch (error) {\r\n      console.error('Error fetching movie details:', error);\r\n    }\r\n  };\r\n\r\n  const fetchMovieDetails = async (movieId) => {\r\n    try {\r\n      const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=00e58447b107bbf5456c351874f74894`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching movie details:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const addToFavorites = (movie) => {\r\n    const isAlreadyAdded = props.movies.some((fav) => fav.id === movie.id);\r\n\r\n    if (!isAlreadyAdded) {\r\n      props.AddFavourites(movie);\r\n    }\r\n  };\r\n\r\n  const getUserCountry = async () => {\r\n    try {\r\n      console.log('Getting user country...');\r\n      if (navigator.geolocation) {\r\n        console.log('Geolocation supported. Fetching current position...');\r\n        navigator.geolocation.getCurrentPosition(async (position) => {\r\n          console.log('Current position fetched:', position.coords);\r\n          const { latitude, longitude } = position.coords;\r\n          console.log('Latitude:', latitude, 'Longitude:', longitude);\r\n          console.log('Fetching country from location...');\r\n          const country = await getCountryFromLocation(latitude, longitude);\r\n          console.log('User country:', country);\r\n          setUserCountry(country);\r\n        });\r\n      } else {\r\n        setErrorMsg('Geolocation is not supported by this browser.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting user country:', error);\r\n      setErrorMsg('Error getting user country: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const getCountryFromLocation = async (latitude, longitude) => {\r\n    try {\r\n      console.log('Fetching country from location:', latitude, longitude);\r\n      const response = await axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${latitude},${longitude}&key=2de1c3f556354322b312077954676795`);\r\n      console.log('Location data response:', response.data);\r\n      const country = response.data.results[0].components.country;\r\n      console.log('Country:', country);\r\n      return country;\r\n    } catch (error) {\r\n      console.error('Error getting country from location:', error);\r\n      throw new Error('Error getting country from location: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={getUserCountry}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-film\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M0 1a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1zm4 0v6h8V1zm8 8H4v6h8zM1 1v2h2V1zm2 3H1v2h2zM1 7v2h2V7zm2 3H1v2h2zm-2 3v2h2v-2zM15 1h-2v2h2zm-2 3v2h2V4zm2 3h-2v2h2zm-2 3v2h2v-2zm2 3h-2v2h2z\"/>\r\n      </svg></button>\r\n      {errorMsg && <p>{errorMsg}</p>}\r\n      {props.movies.map((movie, index) => (\r\n        <div className='image-container d-flex justify-content-start m-3' key={index}>\r\n          <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt='movie' onClick={() => handleClick(movie)} />\r\n          <div onClick={() => addToFavorites(movie)} className='overlay d-flex align-items-center justify-content-center'>\r\n            <button>Add to Favorites</button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      {selectedMovie && (\r\n        <div className='image-container d-flex justify-content-start m-3'>\r\n          <div className='selected-movie-details'>\r\n            <div className='movie-info'>\r\n              <img src={`https://image.tmdb.org/t/p/w500/${selectedMovie.poster_path}`} alt='selected movie poster' />\r\n              <div>\r\n                <h2>{selectedMovie.title}</h2>\r\n                <p>{selectedMovie.description}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"]},"metadata":{},"sourceType":"module"}