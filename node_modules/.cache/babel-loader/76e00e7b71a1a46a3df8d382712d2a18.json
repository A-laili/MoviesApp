{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Labs Dev Multi\\\\Nouveau dossier\\\\react-movie-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\nimport AddFavourites from './components/AddFavourites';\nimport RemoveFavourites from './components/RemoveFavourites';\n\nconst App = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [favourites, setFavourites] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [selectedMovie, setSelectedMovie] = useState(null); // New state to store the selected movie\n\n  const getMovieRequest = async searchValue => {\n    const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=70c47435`;\n    const response = await fetch(url);\n    const responseJson = await response.json();\n\n    if (responseJson.Search) {\n      setMovies(responseJson.Search);\n    }\n  };\n\n  useEffect(() => {\n    getMovieRequest(searchValue);\n  }, [searchValue]);\n  useEffect(() => {\n    const movieFavourites = JSON.parse(localStorage.getItem('react-movie-app-favourites'));\n\n    if (movieFavourites) {\n      setFavourites(movieFavourites);\n    }\n  }, []);\n\n  const saveToLocalStorage = items => {\n    localStorage.setItem('react-movie-app-favourites', JSON.stringify(items));\n  };\n\n  const addFavouriteMovie = movie => {\n    const isAlreadyAdded = favourites.some(fav => fav.imdbID === movie.imdbID);\n\n    if (!isAlreadyAdded) {\n      const newFavouriteList = [...favourites, movie];\n      setFavourites(newFavouriteList);\n      saveToLocalStorage(newFavouriteList);\n    }\n  };\n\n  const removeFavouriteMovie = movie => {\n    const newFavouriteList = favourites.filter(favourite => favourite.imdbID !== movie.imdbID);\n    setFavourites(newFavouriteList);\n    saveToLocalStorage(newFavouriteList);\n  };\n\n  const handleMovieClick = movie => {\n    setSelectedMovie(movie); // Set the selected movie when clicked\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid movie-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex align-items-center mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(MovieListHeading, {\n        heading: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchValue: searchValue,\n        setSearchValue: setSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(MovieList, {\n        movies: movies,\n        handleFavouritesClick: addFavouriteMovie // Pass the addFavouriteMovie function here\n        ,\n        favouriteComponent: AddFavourites,\n        handleMovieClick: handleMovieClick // Pass the handleMovieClick function here\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), selectedMovie &&\n      /*#__PURE__*/\n      // Display selected movie details and trailer if a movie is selected\n      _jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-movie-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedMovie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMovie.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex align-items-center mt-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(MovieListHeading, {\n        heading: \"Favourites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: favourites,\n        handleFavouritesClick: removeFavouriteMovie,\n        favouriteComponent: RemoveFavourites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"t7DK4F9PiYatsaK2redK4h+ji5g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Labs Dev Multi/Nouveau dossier/react-movie-app/src/App.js"],"names":["React","useState","useEffect","MovieList","MovieListHeading","SearchBox","AddFavourites","RemoveFavourites","App","movies","setMovies","favourites","setFavourites","searchValue","setSearchValue","selectedMovie","setSelectedMovie","getMovieRequest","url","response","fetch","responseJson","json","Search","movieFavourites","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","addFavouriteMovie","movie","isAlreadyAdded","some","fav","imdbID","newFavouriteList","removeFavouriteMovie","filter","favourite","handleMovieClick","Title","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport MovieList from './components/MovieList';\r\nimport MovieListHeading from './components/MovieListHeading';\r\nimport SearchBox from './components/SearchBox';\r\nimport AddFavourites from './components/AddFavourites';\r\nimport RemoveFavourites from './components/RemoveFavourites';\r\n\r\nconst App = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [favourites, setFavourites] = useState([]);\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [selectedMovie, setSelectedMovie] = useState(null); // New state to store the selected movie\r\n\r\n    const getMovieRequest = async (searchValue) => {\r\n        const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=70c47435`;\r\n\r\n        const response = await fetch(url);\r\n        const responseJson = await response.json();\r\n\r\n        if (responseJson.Search) {\r\n            setMovies(responseJson.Search);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMovieRequest(searchValue);\r\n    }, [searchValue]);\r\n\r\n    useEffect(() => {\r\n        const movieFavourites = JSON.parse(localStorage.getItem('react-movie-app-favourites'));\r\n\r\n        if (movieFavourites) {\r\n            setFavourites(movieFavourites);\r\n        }\r\n    }, []);\r\n\r\n    const saveToLocalStorage = (items) => {\r\n        localStorage.setItem('react-movie-app-favourites', JSON.stringify(items));\r\n    };\r\n\r\n    const addFavouriteMovie = (movie) => {\r\n        const isAlreadyAdded = favourites.some((fav) => fav.imdbID === movie.imdbID);\r\n\r\n        if (!isAlreadyAdded) {\r\n            const newFavouriteList = [...favourites, movie];\r\n            setFavourites(newFavouriteList);\r\n            saveToLocalStorage(newFavouriteList);\r\n        }\r\n    };\r\n\r\n    const removeFavouriteMovie = (movie) => {\r\n        const newFavouriteList = favourites.filter((favourite) => favourite.imdbID !== movie.imdbID);\r\n\r\n        setFavourites(newFavouriteList);\r\n        saveToLocalStorage(newFavouriteList);\r\n    };\r\n\r\n    const handleMovieClick = (movie) => {\r\n        setSelectedMovie(movie); // Set the selected movie when clicked\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid movie-app'>\r\n            <div className='row d-flex align-items-center mt-4 mb-4'>\r\n                <MovieListHeading heading='Movies' />\r\n                <SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\r\n            </div>\r\n            <div className='row'>\r\n                <MovieList\r\n                    movies={movies}\r\n                    handleFavouritesClick={addFavouriteMovie} // Pass the addFavouriteMovie function here\r\n                    favouriteComponent={AddFavourites}\r\n                    handleMovieClick={handleMovieClick} // Pass the handleMovieClick function here\r\n                />\r\n                {selectedMovie && ( // Display selected movie details and trailer if a movie is selected\r\n                    <div className='col-md-6'>\r\n                        <div className='selected-movie-details'>\r\n                            <h2>{selectedMovie.Title}</h2>\r\n                            <p>{selectedMovie.description}</p>\r\n                            {/* Include the iframe for the trailer here */}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\t\t\t\r\n            <div className='row d-flex align-items-center mt-4 mb-4'>\r\n                <MovieListHeading heading='Favourites' />\r\n            </div>\r\n            <div className='row'>\r\n                <MovieList\r\n                    movies={favourites}\r\n                    handleFavouritesClick={removeFavouriteMovie}\r\n                    favouriteComponent={RemoveFavourites}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}