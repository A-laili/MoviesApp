{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Labs Dev Multi\\\\Nouveau dossier\\\\react-movie-app\\\\src\\\\components\\\\MovieList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\nimport AddFavourites from './components/AddFavourites';\nimport RemoveFavourites from './components/RemoveFavourites';\n\nconst MovieList = ({\n  movies,\n  handleFavouritesClick,\n  favouriteComponent\n}) => {\n  _s();\n\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  const fetchMovieDetails = async movieTitle => {\n    try {\n      const response = await axios.get(`http://www.omdbapi.com/?t=${movieTitle}&apikey=70c47435`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n      return null;\n    }\n  };\n\n  const fetchMovieTrailer = async movieTitle => {\n    try {\n      const response = await axios.get('https://www.googleapis.com/youtube/v3/search', {\n        params: {\n          q: `${movieTitle} trailer`,\n          part: 'snippet',\n          maxResults: 1,\n          type: 'video',\n          key: 'AIzaSyB0JWfa-UI4fXgayxvo4KFgDj6BU7WUlbw'\n        }\n      });\n      return response.data.items[0].id.videoId;\n    } catch (error) {\n      console.error('Error fetching movie trailer:', error);\n      return null;\n    }\n  };\n\n  const handleClick = async movie => {\n    try {\n      const detailsResponse = await fetchMovieDetails(movie.Title);\n      const trailerId = await fetchMovieTrailer(movie.Title);\n      setSelectedMovie({ ...movie,\n        description: detailsResponse.Plot,\n        trailer: trailerId\n      });\n    } catch (error) {\n      console.error('Error fetching movie details and trailer:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.Poster,\n          alt: \"movie\",\n          onClick: () => handleClick(movie)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"favouriteComponent\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), selectedMovie && selectedMovie.imdbID === movie.imdbID && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-movie-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedMovie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedMovie.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"560\",\n          height: \"315\",\n          src: `https://www.youtube.com/embed/${selectedMovie.trailer}`,\n          title: \"YouTube video player\",\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieList, \"JhENnUjtiZQlPFLMQh6kL0r4AXc=\");\n\n_c = MovieList;\n\nconst App = () => {\n  _s2();\n\n  const [movies, setMovies] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const getMovieRequest = async searchValue => {\n    const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=70c47435`;\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (data.Search) {\n        setMovies(data.Search);\n      }\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  };\n\n  useEffect(() => {\n    getMovieRequest(searchValue);\n  }, [searchValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid movie-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex align-items-center mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(MovieListHeading, {\n        heading: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchValue: searchValue,\n        setSearchValue: setSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: movies,\n        handleFavouritesClick: handleFavouritesClick,\n        favouriteComponent: AddFavourites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"aSTXR8XMZVbn6R5wRCDzQq5Oi+w=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MovieList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Labs Dev Multi/Nouveau dossier/react-movie-app/src/components/MovieList.js"],"names":["React","useState","useEffect","axios","MovieListHeading","SearchBox","AddFavourites","RemoveFavourites","MovieList","movies","handleFavouritesClick","favouriteComponent","selectedMovie","setSelectedMovie","fetchMovieDetails","movieTitle","response","get","data","error","console","fetchMovieTrailer","params","q","part","maxResults","type","key","items","id","videoId","handleClick","movie","detailsResponse","Title","trailerId","description","Plot","trailer","map","index","Poster","imdbID","App","setMovies","searchValue","setSearchValue","getMovieRequest","url","fetch","json","Search"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport MovieListHeading from './components/MovieListHeading';\r\nimport SearchBox from './components/SearchBox';\r\nimport AddFavourites from './components/AddFavourites';\r\nimport RemoveFavourites from './components/RemoveFavourites';\r\n\r\nconst MovieList = ({ movies, handleFavouritesClick, favouriteComponent }) => {\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n\r\n  const fetchMovieDetails = async (movieTitle) => {\r\n    try {\r\n      const response = await axios.get(`http://www.omdbapi.com/?t=${movieTitle}&apikey=70c47435`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching movie details:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const fetchMovieTrailer = async (movieTitle) => {\r\n    try {\r\n      const response = await axios.get('https://www.googleapis.com/youtube/v3/search', {\r\n        params: {\r\n          q: `${movieTitle} trailer`,\r\n          part: 'snippet',\r\n          maxResults: 1,\r\n          type: 'video',\r\n          key: 'AIzaSyB0JWfa-UI4fXgayxvo4KFgDj6BU7WUlbw'\r\n        }\r\n      });\r\n      return response.data.items[0].id.videoId;\r\n    } catch (error) {\r\n      console.error('Error fetching movie trailer:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleClick = async (movie) => {\r\n    try {\r\n      const detailsResponse = await fetchMovieDetails(movie.Title);\r\n      const trailerId = await fetchMovieTrailer(movie.Title);\r\n      setSelectedMovie({ ...movie, description: detailsResponse.Plot, trailer: trailerId });\r\n    } catch (error) {\r\n      console.error('Error fetching movie details and trailer:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='movie-list'>\r\n      {movies.map((movie, index) => (\r\n        <div key={index} className='movie-container'>\r\n          <div className='image-container'>\r\n            <img src={movie.Poster} alt='movie' onClick={() => handleClick(movie)} />\r\n          </div>\r\n          <div className='overlay'>\r\n            <favouriteComponent />\r\n          </div>\r\n          {selectedMovie && selectedMovie.imdbID === movie.imdbID && (\r\n            <div className='selected-movie-details'>\r\n              <h2>{selectedMovie.Title}</h2>\r\n              <p>{selectedMovie.description}</p>\r\n              <iframe\r\n                width='560'\r\n                height='315'\r\n                src={`https://www.youtube.com/embed/${selectedMovie.trailer}`}\r\n                title='YouTube video player'\r\n                frameBorder='0'\r\n                allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\r\n                allowFullScreen\r\n              ></iframe>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const getMovieRequest = async (searchValue) => {\r\n    const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=70c47435`;\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      if (data.Search) {\r\n        setMovies(data.Search);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching movies:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovieRequest(searchValue);\r\n  }, [searchValue]);\r\n\r\n  return (\r\n    <div className='container-fluid movie-app'>\r\n      <div className='row d-flex align-items-center mt-4 mb-4'>\r\n        <MovieListHeading heading='Movies' />\r\n        <SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\r\n      </div>\r\n      <div className='row'>\r\n        <MovieList\r\n          movies={movies}\r\n          handleFavouritesClick={handleFavouritesClick}\r\n          favouriteComponent={AddFavourites}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}