{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Labs Dev Multi\\\\Nouveau dossier\\\\react-movie-app\\\\src\\\\components\\\\MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst MovieList = props => {\n  _s();\n\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  const handleClick = async movie => {\n    try {\n      const detailsResponse = await fetchMovieDetails(movie.Title);\n      const trailerId = await fetchMovieTrailer(movie.Title);\n      setSelectedMovie({ ...movie,\n        description: detailsResponse.Plot,\n        trailer: trailerId\n      });\n    } catch (error) {\n      console.error('Error fetching movie details and trailer:', error);\n    }\n  };\n\n  const fetchMovieDetails = async movieTitle => {\n    try {\n      const response = await axios.get(`http://www.omdbapi.com/?t=${movieTitle}&apikey=70c47435`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n      return null;\n    }\n  };\n\n  const fetchMovieTrailer = async movieTitle => {\n    try {\n      const response = await axios.get('https://www.googleapis.com/youtube/v3/search', {\n        params: {\n          q: `${movieTitle} trailer`,\n          part: 'snippet',\n          maxResults: 1,\n          type: 'video',\n          key: 'AIzaSyB0JWfa-UI4fXgayxvo4KFgDj6BU7WUlbw'\n        }\n      });\n      return response.data.items[0].id.videoId;\n    } catch (error) {\n      console.error('Error fetching movie trailer:', error);\n      return null;\n    }\n  };\n\n  const addToFavorites = movie => {\n    const isAlreadyAdded = props.movies.some(fav => fav.imdbID === movie.imdbID);\n\n    if (!isAlreadyAdded) {\n      props.AddFavourites(movie);\n    }\n  };\n\n  const FavouriteComponent = props.favouriteComponent;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container d-flex justify-content-start m-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.Poster,\n        alt: \"movie\",\n        onClick: () => handleClick(movie)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => props.handleFavouritesClick(movie),\n        className: \"overlay d-flex align-items-center justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(FavouriteComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), selectedMovie && selectedMovie.imdbID === movie.imdbID && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container d-flex justify-content-start m-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-movie-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: selectedMovie.Poster,\n              alt: \"selected movie poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: selectedMovie.Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: selectedMovie.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trailer-container\",\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"560\",\n              height: \"315\",\n              src: `https://www.youtube.com/embed/${selectedMovie.trailer}`,\n              title: \"YouTube video player\",\n              frameBorder: \"0\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_s(MovieList, \"JhENnUjtiZQlPFLMQh6kL0r4AXc=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Labs Dev Multi/Nouveau dossier/react-movie-app/src/components/MovieList.js"],"names":["React","useState","axios","MovieList","props","selectedMovie","setSelectedMovie","handleClick","movie","detailsResponse","fetchMovieDetails","Title","trailerId","fetchMovieTrailer","description","Plot","trailer","error","console","movieTitle","response","get","data","params","q","part","maxResults","type","key","items","id","videoId","addToFavorites","isAlreadyAdded","movies","some","fav","imdbID","AddFavourites","FavouriteComponent","favouriteComponent","map","index","Poster","handleFavouritesClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MovieList = (props) => {\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n\r\n  const handleClick = async (movie) => {\r\n    try {\r\n      const detailsResponse = await fetchMovieDetails(movie.Title);\r\n      const trailerId = await fetchMovieTrailer(movie.Title);\r\n      setSelectedMovie({ ...movie, description: detailsResponse.Plot, trailer: trailerId });\r\n    } catch (error) {\r\n      console.error('Error fetching movie details and trailer:', error);\r\n    }\r\n  };\r\n\r\n  const fetchMovieDetails = async (movieTitle) => {\r\n    try {\r\n      const response = await axios.get(`http://www.omdbapi.com/?t=${movieTitle}&apikey=70c47435`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching movie details:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const fetchMovieTrailer = async (movieTitle) => {\r\n    try {\r\n      const response = await axios.get('https://www.googleapis.com/youtube/v3/search', {\r\n        params: {\r\n          q: `${movieTitle} trailer`,\r\n          part: 'snippet',\r\n          maxResults: 1,\r\n          type: 'video',\r\n          key: 'AIzaSyB0JWfa-UI4fXgayxvo4KFgDj6BU7WUlbw'\r\n        }\r\n      });\r\n      return response.data.items[0].id.videoId;\r\n    } catch (error) {\r\n      console.error('Error fetching movie trailer:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const addToFavorites = (movie) => {\r\n    const isAlreadyAdded = props.movies.some((fav) => fav.imdbID === movie.imdbID);\r\n\r\n    if (!isAlreadyAdded) {\r\n      props.AddFavourites(movie);\r\n    }\r\n  };\r\n\r\n  const FavouriteComponent = props.favouriteComponent;\r\n\r\n  return (\r\n    <>\r\n      {props.movies.map((movie, index) => (\r\n        <div className='image-container d-flex justify-content-start m-3' key={index}>\r\n          <img src={movie.Poster} alt='movie' onClick={() => handleClick(movie)} />\r\n          <div onClick={() => props.handleFavouritesClick(movie)} className='overlay d-flex align-items-center justify-content-center'>\r\n\t\t\t\t\t\t<FavouriteComponent />\r\n\t\t\t</div>\r\n\t\t\r\n          {selectedMovie && selectedMovie.imdbID === movie.imdbID && (\r\n            <div className='image-container d-flex justify-content-start m-3'key={index}>\r\n              <div className='selected-movie-details'>\r\n                <div className=\"movie-info\">\r\n                  <img src={selectedMovie.Poster} alt='selected movie poster' />\r\n                  <div>\r\n                    <h2>{selectedMovie.Title}</h2>\r\n                    <p>{selectedMovie.description}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"trailer-container\">\r\n                  <iframe\r\n                    width='560'\r\n                    height='315'\r\n                    src={`https://www.youtube.com/embed/${selectedMovie.trailer}`}\r\n                    title='YouTube video player'\r\n                    frameBorder='0'\r\n                    allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\r\n                    allowFullScreen\r\n                  ></iframe>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"]},"metadata":{},"sourceType":"module"}