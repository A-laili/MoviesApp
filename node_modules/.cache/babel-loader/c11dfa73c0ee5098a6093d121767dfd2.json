{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Labs Dev Multi\\\\Nouveau dossier\\\\react-movie-app\\\\src\\\\components\\\\MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst MovieList = props => {\n  _s();\n\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n\n  const handleClick = async movie => {\n    try {\n      const detailsResponse = await fetchMovieDetails(movie.Title);\n      const trailerId = await fetchMovieTrailer(movie.Title);\n      setSelectedMovie({ ...movie,\n        description: detailsResponse.Plot,\n        trailer: trailerId\n      });\n    } catch (error) {\n      console.error('Error fetching movie details and trailer:', error);\n    }\n  };\n\n  const toggleFavorite = movie => {\n    const index = favorites.findIndex(fav => fav.imdbID === movie.imdbID);\n\n    if (index === -1) {\n      setFavorites([...favorites, movie]);\n    } else {\n      setFavorites(favorites.filter(fav => fav.imdbID !== movie.imdbID));\n    }\n  };\n\n  const fetchMovieDetails = async movieTitle => {\n    try {\n      const response = await axios.get(`http://www.omdbapi.com/?t=${movieTitle}&apikey=70c47435`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n      return null;\n    }\n  };\n\n  const fetchMovieTrailer = async movieTitle => {\n    try {\n      const response = await axios.get('https://www.googleapis.com/youtube/v3/search', {\n        params: {\n          q: `${movieTitle} trailer`,\n          part: 'snippet',\n          maxResults: 1,\n          type: 'video',\n          key: 'AIzaSyB0JWfa-UI4fXgayxvo4KFgDj6BU7WUlbw'\n        }\n      });\n      return response.data.items[0].id.videoId;\n    } catch (error) {\n      console.error('Error fetching movie trailer:', error);\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container d-flex justify-content-start m-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.Poster,\n        alt: \"movie\",\n        onClick: () => handleClick(movie)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay d-flex align-items-center justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleFavorite(movie),\n          children: favorites.find(fav => fav.imdbID === movie.imdbID) ? 'Remove from favorites' : 'Add to favorites'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)), selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-movie-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedMovie.Poster,\n          alt: \"selected movie poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedMovie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMovie.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trailer-container\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"560\",\n          height: \"315\",\n          src: `https://www.youtube.com/embed/${selectedMovie.trailer}`,\n          title: \"YouTube video player\",\n          frameborder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowfullscreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MovieList, \"chcRNrc3Q2mSyPMOCIb0iSdeYx0=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Labs Dev Multi/Nouveau dossier/react-movie-app/src/components/MovieList.js"],"names":["React","useState","axios","MovieList","props","selectedMovie","setSelectedMovie","favorites","setFavorites","handleClick","movie","detailsResponse","fetchMovieDetails","Title","trailerId","fetchMovieTrailer","description","Plot","trailer","error","console","toggleFavorite","index","findIndex","fav","imdbID","filter","movieTitle","response","get","data","params","q","part","maxResults","type","key","items","id","videoId","movies","map","Poster","find"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMQ,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnC,QAAI;AACF,YAAMC,eAAe,GAAG,MAAMC,iBAAiB,CAACF,KAAK,CAACG,KAAP,CAA/C;AACA,YAAMC,SAAS,GAAG,MAAMC,iBAAiB,CAACL,KAAK,CAACG,KAAP,CAAzC;AACAP,MAAAA,gBAAgB,CAAC,EAAE,GAAGI,KAAL;AAAYM,QAAAA,WAAW,EAAEL,eAAe,CAACM,IAAzC;AAA+CC,QAAAA,OAAO,EAAEJ;AAAxD,OAAD,CAAhB;AACD,KAJD,CAIE,OAAOK,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,2CAAd,EAA2DA,KAA3D;AACD;AACF,GARD;;AAUA,QAAME,cAAc,GAAIX,KAAD,IAAW;AAChC,UAAMY,KAAK,GAAGf,SAAS,CAACgB,SAAV,CAAqBC,GAAD,IAASA,GAAG,CAACC,MAAJ,KAAef,KAAK,CAACe,MAAlD,CAAd;;AACA,QAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBd,MAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeG,KAAf,CAAD,CAAZ;AACD,KAFD,MAEO;AACLF,MAAAA,YAAY,CAACD,SAAS,CAACmB,MAAV,CAAkBF,GAAD,IAASA,GAAG,CAACC,MAAJ,KAAef,KAAK,CAACe,MAA/C,CAAD,CAAZ;AACD;AACF,GAPD;;AASA,QAAMb,iBAAiB,GAAG,MAAOe,UAAP,IAAsB;AAC9C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAW,6BAA4BF,UAAW,kBAAlD,CAAvB;AACA,aAAOC,QAAQ,CAACE,IAAhB;AACD,KAHD,CAGE,OAAOX,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,+BAAd,EAA+CA,KAA/C;AACA,aAAO,IAAP;AACD;AACF,GARD;;AAUA,QAAMJ,iBAAiB,GAAG,MAAOY,UAAP,IAAsB;AAC9C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAU,8CAAV,EAA0D;AAC/EE,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAG,GAAEL,UAAW,UADX;AAENM,UAAAA,IAAI,EAAE,SAFA;AAGNC,UAAAA,UAAU,EAAE,CAHN;AAINC,UAAAA,IAAI,EAAE,OAJA;AAKNC,UAAAA,GAAG,EAAE;AALC;AADuE,OAA1D,CAAvB;AASA,aAAOR,QAAQ,CAACE,IAAT,CAAcO,KAAd,CAAoB,CAApB,EAAuBC,EAAvB,CAA0BC,OAAjC;AACD,KAXD,CAWE,OAAOpB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,+BAAd,EAA+CA,KAA/C;AACA,aAAO,IAAP;AACD;AACF,GAhBD;;AAkBA,sBACE;AAAA,eACGf,KAAK,CAACoC,MAAN,CAAaC,GAAb,CAAiB,CAAC/B,KAAD,EAAQY,KAAR,kBAChB;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEZ,KAAK,CAACgC,MAAhB;AAAwB,QAAA,GAAG,EAAC,OAA5B;AAAoC,QAAA,OAAO,EAAE,MAAMjC,WAAW,CAACC,KAAD;AAA9D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,0DAAf;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAE,MAAMW,cAAc,CAACX,KAAD,CAArC;AAAA,oBACGH,SAAS,CAACoC,IAAV,CAAgBnB,GAAD,IAASA,GAAG,CAACC,MAAJ,KAAef,KAAK,CAACe,MAA7C,IAAuD,uBAAvD,GAAiF;AADpF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAuEH,KAAvE;AAAA;AAAA;AAAA;AAAA,YADD,CADH,EAWGjB,aAAa,iBACZ;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEA,aAAa,CAACqC,MAAxB;AAAgC,UAAA,GAAG,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACE;AAAA,sBAAKrC,aAAa,CAACQ;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAIR,aAAa,CAACW;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACE;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,MAAM,EAAC,KAFT;AAGE,UAAA,GAAG,EAAG,iCAAgCX,aAAa,CAACa,OAAQ,EAH9D;AAIE,UAAA,KAAK,EAAC,sBAJR;AAKE,UAAA,WAAW,EAAC,GALd;AAME,UAAA,KAAK,EAAC,0FANR;AAOE,UAAA,eAAe;AAPjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA,kBADF;AAoCD,CAvFD;;GAAMf,S;;KAAAA,S;AAyFN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MovieList = (props) => {\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  const handleClick = async (movie) => {\r\n    try {\r\n      const detailsResponse = await fetchMovieDetails(movie.Title);\r\n      const trailerId = await fetchMovieTrailer(movie.Title);\r\n      setSelectedMovie({ ...movie, description: detailsResponse.Plot, trailer: trailerId });\r\n    } catch (error) {\r\n      console.error('Error fetching movie details and trailer:', error);\r\n    }\r\n  };\r\n\r\n  const toggleFavorite = (movie) => {\r\n    const index = favorites.findIndex((fav) => fav.imdbID === movie.imdbID);\r\n    if (index === -1) {\r\n      setFavorites([...favorites, movie]);\r\n    } else {\r\n      setFavorites(favorites.filter((fav) => fav.imdbID !== movie.imdbID));\r\n    }\r\n  };\r\n\r\n  const fetchMovieDetails = async (movieTitle) => {\r\n    try {\r\n      const response = await axios.get(`http://www.omdbapi.com/?t=${movieTitle}&apikey=70c47435`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching movie details:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const fetchMovieTrailer = async (movieTitle) => {\r\n    try {\r\n      const response = await axios.get('https://www.googleapis.com/youtube/v3/search', {\r\n        params: {\r\n          q: `${movieTitle} trailer`,\r\n          part: 'snippet',\r\n          maxResults: 1,\r\n          type: 'video',\r\n          key: 'AIzaSyB0JWfa-UI4fXgayxvo4KFgDj6BU7WUlbw'\r\n        }\r\n      });\r\n      return response.data.items[0].id.videoId;\r\n    } catch (error) {\r\n      console.error('Error fetching movie trailer:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.movies.map((movie, index) => (\r\n        <div className='image-container d-flex justify-content-start m-3' key={index}>\r\n          <img src={movie.Poster} alt='movie' onClick={() => handleClick(movie)} />\r\n          <div className='overlay d-flex align-items-center justify-content-center'>\r\n            <button onClick={() => toggleFavorite(movie)}>\r\n              {favorites.find((fav) => fav.imdbID === movie.imdbID) ? 'Remove from favorites' : 'Add to favorites'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      {selectedMovie && (\r\n        <div className='selected-movie-details'>\r\n          <div className=\"movie-info\">\r\n            <img src={selectedMovie.Poster} alt='selected movie poster' />\r\n            <div>\r\n              <h2>{selectedMovie.Title}</h2>\r\n              <p>{selectedMovie.description}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"trailer-container\">\r\n            <iframe\r\n              width='560'\r\n              height='315'\r\n              src={`https://www.youtube.com/embed/${selectedMovie.trailer}`}\r\n              title='YouTube video player'\r\n              frameborder='0'\r\n              allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\r\n              allowfullscreen\r\n            ></iframe>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"]},"metadata":{},"sourceType":"module"}