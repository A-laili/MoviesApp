{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Labs Dev Multi\\\\Nouveau dossier\\\\react-movie-app\\\\src\\\\components\\\\MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst MovieList = props => {\n  _s();\n\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  const handleClick = async movie => {\n    try {\n      const detailsResponse = await fetchMovieDetails(movie.Title);\n      const trailerId = await fetchMovieTrailer(movie.Title);\n      setSelectedMovie({ ...movie,\n        description: detailsResponse.Plot,\n        trailer: trailerId\n      });\n    } catch (error) {\n      console.error('Error fetching movie details and trailer:', error);\n    }\n  };\n\n  const fetchMovieDetails = async movieTitle => {\n    try {\n      const response = await axios.get(`http://www.omdbapi.com/?t=${movieTitle}&apikey=70c47435`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n      return null;\n    }\n  };\n\n  const fetchMovieTrailer = async movieTitle => {\n    try {\n      const response = await axios.get('https://www.googleapis.com/youtube/v3/search', {\n        params: {\n          q: `${movieTitle} trailer`,\n          part: 'snippet',\n          maxResults: 1,\n          type: 'video',\n          key: 'AIzaSyB0JWfa-UI4fXgayxvo4KFgDj6BU7WUlbw'\n        }\n      });\n      return response.data.items[0].id.videoId;\n    } catch (error) {\n      console.error('Error fetching movie trailer:', error);\n      return null;\n    }\n  };\n\n  const FavouriteComponent = props.favouriteComponent;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-container\",\n    children: props.movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container d-flex justify-content-start m-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.Poster,\n        alt: \"movie\",\n        onClick: () => handleClick(movie)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay d-flex align-items-center justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(FavouriteComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }, this), selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-movie-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedMovie.Poster,\n          alt: \"selected movie poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedMovie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMovie.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            width: \"560\",\n            height: \"315\",\n            src: `https://www.youtube.com/embed/${selectedMovie.trailer}`,\n            title: \"Trailer\",\n            frameborder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowfullscreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 4\n  }, this);\n};\n\n_s(MovieList, \"JhENnUjtiZQlPFLMQh6kL0r4AXc=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Labs Dev Multi/Nouveau dossier/react-movie-app/src/components/MovieList.js"],"names":["React","useState","axios","MovieList","props","selectedMovie","setSelectedMovie","handleClick","movie","detailsResponse","fetchMovieDetails","Title","trailerId","fetchMovieTrailer","description","Plot","trailer","error","console","movieTitle","response","get","data","params","q","part","maxResults","type","key","items","id","videoId","FavouriteComponent","favouriteComponent","movies","map","index","Poster"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMM,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnC,QAAI;AACL,YAAMC,eAAe,GAAG,MAAMC,iBAAiB,CAACF,KAAK,CAACG,KAAP,CAA/C;AACA,YAAMC,SAAS,GAAG,MAAMC,iBAAiB,CAACL,KAAK,CAACG,KAAP,CAAzC;AACAL,MAAAA,gBAAgB,CAAC,EAAE,GAAGE,KAAL;AAAYM,QAAAA,WAAW,EAAEL,eAAe,CAACM,IAAzC;AAA+CC,QAAAA,OAAO,EAAEJ;AAAxD,OAAD,CAAhB;AACE,KAJD,CAIE,OAAOK,KAAP,EAAc;AACjBC,MAAAA,OAAO,CAACD,KAAR,CAAc,2CAAd,EAA2DA,KAA3D;AACE;AACF,GARD;;AAUA,QAAMP,iBAAiB,GAAG,MAAOS,UAAP,IAAsB;AAC9C,QAAI;AACL,YAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAW,6BAA4BF,UAAW,kBAAlD,CAAvB;AACA,aAAOC,QAAQ,CAACE,IAAhB;AACE,KAHD,CAGE,OAAOL,KAAP,EAAc;AACjBC,MAAAA,OAAO,CAACD,KAAR,CAAc,+BAAd,EAA+CA,KAA/C;AACA,aAAO,IAAP;AACE;AACF,GARD;;AAUA,QAAMJ,iBAAiB,GAAG,MAAOM,UAAP,IAAsB;AAC9C,QAAI;AACL,YAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,8CAAV,EAA0D;AAC/EE,QAAAA,MAAM,EAAE;AACTC,UAAAA,CAAC,EAAG,GAAEL,UAAW,UADR;AAETM,UAAAA,IAAI,EAAE,SAFG;AAGTC,UAAAA,UAAU,EAAE,CAHH;AAITC,UAAAA,IAAI,EAAE,OAJG;AAKTC,UAAAA,GAAG,EAAE;AALI;AADuE,OAA1D,CAAvB;AASA,aAAOR,QAAQ,CAACE,IAAT,CAAcO,KAAd,CAAoB,CAApB,EAAuBC,EAAvB,CAA0BC,OAAjC;AACE,KAXD,CAWE,OAAOd,KAAP,EAAc;AACjBC,MAAAA,OAAO,CAACD,KAAR,CAAc,+BAAd,EAA+CA,KAA/C;AACA,aAAO,IAAP;AACE;AACF,GAhBD;;AAkBA,QAAMe,kBAAkB,GAAG5B,KAAK,CAAC6B,kBAAjC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACA7B,KAAK,CAAC8B,MAAN,CAAaC,GAAb,CAAiB,CAAC3B,KAAD,EAAQ4B,KAAR,kBAChB;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA,8BACD;AAAK,QAAA,GAAG,EAAE5B,KAAK,CAAC6B,MAAhB;AAAwB,QAAA,GAAG,EAAC,OAA5B;AAAoC,QAAA,OAAO,EAAE,MAAM9B,WAAW,CAACC,KAAD;AAA9D;AAAA;AAAA;AAAA;AAAA,cADC,eAED;AAAK,QAAA,SAAS,EAAC,0DAAf;AAAA,+BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFC,EAKAH,aAAa,iBACb;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,gCACD;AAAK,UAAA,GAAG,EAAEA,aAAa,CAACgC,MAAxB;AAAgC,UAAA,GAAG,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,gBADC,eAED;AAAA,kCACE;AAAA,sBAAKhC,aAAa,CAACM;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAIN,aAAa,CAACS;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AACD,YAAA,KAAK,EAAC,KADL;AAED,YAAA,MAAM,EAAC,KAFN;AAGD,YAAA,GAAG,EAAG,iCAAgCT,aAAa,CAACW,OAAQ,EAH3D;AAID,YAAA,KAAK,EAAC,SAJL;AAKD,YAAA,WAAW,EAAC,GALX;AAMD,YAAA,KAAK,EAAC,0FANL;AAOD,YAAA,eAAe;AAPd;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFC;AAAA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA,OAAuEoB,KAAvE;AAAA;AAAA;AAAA;AAAA,YADD;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCE,CA3EH;;GAAMjC,S;;KAAAA,S;AA6EJ,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MovieList = (props) => {\r\n\tconst [selectedMovie, setSelectedMovie] = useState(null);\r\n  \r\n\tconst handleClick = async (movie) => {\r\n\t  try {\r\n\t\tconst detailsResponse = await fetchMovieDetails(movie.Title);\r\n\t\tconst trailerId = await fetchMovieTrailer(movie.Title);\r\n\t\tsetSelectedMovie({ ...movie, description: detailsResponse.Plot, trailer: trailerId });\r\n\t  } catch (error) {\r\n\t\tconsole.error('Error fetching movie details and trailer:', error);\r\n\t  }\r\n\t};\r\n  \r\n\tconst fetchMovieDetails = async (movieTitle) => {\r\n\t  try {\r\n\t\tconst response = await axios.get(`http://www.omdbapi.com/?t=${movieTitle}&apikey=70c47435`);\r\n\t\treturn response.data;\r\n\t  } catch (error) {\r\n\t\tconsole.error('Error fetching movie details:', error);\r\n\t\treturn null;\r\n\t  }\r\n\t};\r\n  \r\n\tconst fetchMovieTrailer = async (movieTitle) => {\r\n\t  try {\r\n\t\tconst response = await axios.get('https://www.googleapis.com/youtube/v3/search', {\r\n\t\t  params: {\r\n\t\t\tq: `${movieTitle} trailer`,\r\n\t\t\tpart: 'snippet',\r\n\t\t\tmaxResults: 1,\r\n\t\t\ttype: 'video',\r\n\t\t\tkey: 'AIzaSyB0JWfa-UI4fXgayxvo4KFgDj6BU7WUlbw'\r\n\t\t  }\r\n\t\t});\r\n\t\treturn response.data.items[0].id.videoId;\r\n\t  } catch (error) {\r\n\t\tconsole.error('Error fetching movie trailer:', error);\r\n\t\treturn null;\r\n\t  }\r\n\t};\r\n  \r\n\tconst FavouriteComponent = props.favouriteComponent;\r\n  \r\n\treturn (\r\n\t  <div className=\"movie-container\">\r\n\t\t{props.movies.map((movie, index) => (\r\n\t\t  <div className='image-container d-flex justify-content-start m-3' key={index}>\r\n\t\t\t<img src={movie.Poster} alt='movie' onClick={() => handleClick(movie)} />\r\n\t\t\t<div className='overlay d-flex align-items-center justify-content-center'>\r\n\t\t\t  <FavouriteComponent />\r\n\t\t\t</div>\r\n\t\t\t{selectedMovie && (\r\n\t\t  <div className='selected-movie-details'>\r\n\t\t\t<img src={selectedMovie.Poster} alt='selected movie poster' />\r\n\t\t\t<div>\r\n\t\t\t  <h2>{selectedMovie.Title}</h2>\r\n\t\t\t  <p>{selectedMovie.description}</p>\r\n\t\t\t  <iframe\r\n\t\t\t\twidth='560'\r\n\t\t\t\theight='315'\r\n\t\t\t\tsrc={`https://www.youtube.com/embed/${selectedMovie.trailer}`}\r\n\t\t\t\ttitle='Trailer'\r\n\t\t\t\tframeborder='0'\r\n\t\t\t\tallow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\r\n\t\t\t\tallowfullscreen\r\n\t\t\t  ></iframe>\r\n\t\t\t</div>\r\n\t\t  </div>\r\n\t\t)}\r\n\t\t  </div>\r\n\t\t))}\r\n  \r\n\t\t\r\n\t  </div>\r\n\t);\r\n  };\r\n  \r\n  export default MovieList;\r\n  "]},"metadata":{},"sourceType":"module"}